# Use OpenJDK 17 as base image
FROM openjdk:17-jdk-slim

# Set working directory
WORKDIR /app

# Copy Maven wrapper and pom.xml
COPY HotelReservationSystem-main/HotelReservationSystem/HotelReservationSystem/HotelSystemManegment/mvnw .
COPY HotelReservationSystem-main/HotelReservationSystem/HotelReservationSystem/HotelSystemManegment/pom.xml .

# Copy Maven wrapper jar
COPY HotelReservationSystem-main/HotelReservationSystem/HotelReservationSystem/HotelSystemManegment/.mvn .mvn

# Make mvnw executable
RUN chmod +x mvnw

# Download dependencies
RUN ./mvnw dependency:go-offline -B

# Copy source code
COPY HotelReservationSystem-main/HotelReservationSystem/HotelReservationSystem/HotelSystemManegment/src ./src

# Build the application
RUN ./mvnw clean package -DskipTests

# Create a new stage for runtime
FROM openjdk:17-jre-slim

# Set working directory
WORKDIR /app

# Copy the built jar from the previous stage
COPY --from=0 /app/target/*.jar app.jar

# Expose port
EXPOSE 8080

# Set environment variables
ENV SPRING_PROFILES_ACTIVE=docker

# Run the application
ENTRYPOINT ["java", "-jar", "app.jar"] 